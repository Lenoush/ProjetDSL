/*
 * generated by Xtext 2.25.0
 */
package org.xtext.projet1.formatting2

import com.google.inject.Inject
import l3IA_ProjetHTML.GraphMaker
import l3IA_ProjetHTML.GraphRealisation
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.projet1.services.MyDslGrammarAccess

class MyDslFormatter extends AbstractFormatter2 {
	
	@Inject extension MyDslGrammarAccess

	def dispatch void format(GraphRealisation graphRealisation, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		graphRealisation.ownedImport.format
		graphRealisation.ownedGraphMaker.format
		for (filterData : graphRealisation.ownedFilter) {
			filterData.format
		}
		for (graphUpdate : graphRealisation.ownedGraphUpdate) {
			graphUpdate.format
		}
	}

	def dispatch void format(GraphMaker graphMaker, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		graphMaker.nameAbscisse.format
		for (columns : graphMaker.nameOrdonnees) {
			columns.format
		}
	}
	
	// TODO: implement for FilterNotNull, FilterEgaleS
}
